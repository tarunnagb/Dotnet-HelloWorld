name: Build & Push to image ECR
run-name: dot-net-build-image-${{ inputs.AWS_REGION }}-${{ inputs.environment }}

on:
  workflow_dispatch:
    inputs:
      AWS_REGION:
        description: "AWS region"
        required: true
        type: string
        default: "us-east-1"
        options:
          - us-east-1
          - eu-central-1
      environment:
        description: "Deployment environment"
        required: true
        type: string
        default: "dev"
        options:
         - dev
         - qa

      image_tag:
        description: "Docker image tag"
        required: true
        type: string

      dockerfilePath:
        description: "Dockerfile path"
        default: Dockerfile
        type: string

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ inputs.AWS_REGION }}

      - name: Login to Amazon ECR
        run: |
          AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          ECR_REPO="my-service-${{ inputs.environment }}"
          ECR_URI="$AWS_ACCOUNT_ID.dkr.ecr.${{ inputs.AWS_REGION }}.amazonaws.com/$ECR_REPO"

          echo "AWS_ACCOUNT_ID=$AWS_ACCOUNT_ID" >> $GITHUB_ENV
          echo "ECR_REPO=$ECR_REPO" >> $GITHUB_ENV
          echo "ECR_URI=$ECR_URI" >> $GITHUB_ENV

          aws ecr get-login-password --region ${{ inputs.AWS_REGION }} \
            | docker login --username AWS --password-stdin "$AWS_ACCOUNT_ID.dkr.ecr.${{ inputs.AWS_REGION }}.amazonaws.com"

      - name: Build Docker image
        run: |
          docker build -f ${{ inputs.dockerfilePath }} \
            -t $ECR_URI:${{ inputs.image_tag }} .

      - name: Push Docker image to ECR
        run: |
          docker push $ECR_URI:${{ inputs.image_tag }}
